########################################################################################
#                       Easy way to deploy Postgres, SQL Server, Mongo, Neo4j          #
########################################################################################

services:
  postgres:
    container_name: analytics-postgres-1
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Password123
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-db-volume:/var/lib/postgresql/data
    networks:
      - analytics-network

  mssql:
    container_name: analytics-mssql-1
    image: mcr.microsoft.com/mssql/server:latest
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Password123
    ports:
      - 1433:1433
    volumes:
      - mssql-dev-db-volume:/var/lib/mssql/data
    networks:
      - analytics-network

  mongo:
    container_name: analytics-mongo-1
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Password123
    ports:
      - 27017:27017
    volumes:
      - mongo-dev-db-volume:/data/db
    networks:
      - analytics-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    container_name: analytics-mongo-express-1
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: Password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:Password123@mongo:27017/
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: Password123
    networks:
      - analytics-network
    depends_on:
      mongo:
        condition: service_healthy

  neo4j:
    container_name: analytics-neo4j-1
    image: neo4j:latest
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/Password123
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j-dev-db-volume:/data
    networks:
      - analytics-network

########################################################################################
volumes:
  postgres-dev-db-volume:
  mssql-dev-db-volume:
  mongo-dev-db-volume:
  neo4j-dev-db-volume:
########################################################################################

########################################################################################
networks:
  analytics-network:
    driver: bridge
########################################################################################
